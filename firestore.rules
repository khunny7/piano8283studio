rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - allow authenticated users to manage their own profiles
    // and allow reading all users for admin functionality
    match /users/{userId} {
      // Allow read for authenticated users (needed for admin user list)
      allow read: if request.auth != null;
      
      // Allow create/update for own profile
      allow create, update: if request.auth != null && request.auth.uid == userId;
      
      // Allow delete only if it's your own profile (for now)
      allow delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Blog posts - read access for everyone, write access for authenticated users
    match /blogPosts/{postId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Comments - read access for everyone, write access for authenticated users
    match /comments/{commentId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == resource.data.authorId;
      allow delete: if request.auth != null && 
        (request.auth.uid == resource.data.authorId || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Test documents - allow read/write for development
    match /test/{document=**} {
      allow read, write: if true;
    }
    
    // Messages collection for FirestoreDemo
    match /messages/{document=**} {
      allow read, write: if true;
    }
  }
}